definitions:
  auth.EmailVerificationRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  auth.LoginRequest:
    properties:
      email:
        description: Required. User email
        type: string
      password:
        description: Required. User password. Min 8 characters, max 100 characters
        maxLength: 100
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  auth.LoginResponse:
    properties:
      token:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        description: Required. User email
        type: string
      name:
        description: Required. User name. Max length=100, min length 1
        maxLength: 100
        minLength: 1
        type: string
      otp:
        description: Required. OTP. min 111111, max 999999
        maximum: 999999
        minimum: 111111
        type: integer
      password:
        description: Required. User password. Min 8 characters, max 100 characters
        maxLength: 100
        minLength: 8
        type: string
    required:
    - email
    - name
    - otp
    - password
    type: object
  auth.RegisterResponse:
    properties:
      token:
        type: string
    type: object
  auth.ResetPasswordRequest:
    properties:
      email:
        description: Required. User email
        type: string
      otp:
        description: Required. OTP. min 111111, max 999999
        maximum: 999999
        minimum: 111111
        type: integer
      password:
        description: Required. User password. Min 8 characters, max 100 characters
        maxLength: 100
        minLength: 8
        type: string
    required:
    - email
    - otp
    - password
    type: object
  utils.ErrResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/email_verification:
    post:
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.EmailVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Sends verification email.
      tags:
      - auth
  /auth/login:
    post:
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: API for user login.
      tags:
      - auth
  /auth/register:
    post:
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: API for new user registration.
      tags:
      - auth
  /auth/reset:
    post:
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Resets user password.
      tags:
      - auth
swagger: "2.0"
